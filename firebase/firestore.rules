rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // 사용자 자신에 대한 접근 함수
    function isUser(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    // 관리자 여부 확인 함수
    function isAdmin() {
      return request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // 승인된 교사 여부 확인 함수
    function isApprovedTeacher() {
      return request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher' &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isApproved == true;
    }
    
    // 사용자 컬렉션 규칙
    match /users/{userId} {
      // 자신의 데이터나 관리자는 읽기 가능
      allow read: if isUser(userId) || isAdmin();
      
      // 관리자는 모든 유저 문서 읽기 가능
      allow list: if isAdmin();
      
      // 자신의 데이터는 수정 가능 (단, role과 isApproved 필드는 제외)
      allow update: if isUser(userId) && 
        !request.resource.data.diff(resource.data).affectedKeys().hasAny(['role', 'isApproved']);
      
      // 관리자는 모든 유저 문서 수정 가능
      allow update: if isAdmin();
      
      // 관리자는 문서 삭제 가능
      allow delete: if isAdmin();
    }
    
    // 학생 컬렉션 규칙
    match /students/{studentId} {
      // 자신이거나 담당 교사, 또는 관리자는 읽기 가능
      allow read: if isUser(studentId) || 
        (request.auth != null && resource.data.teacherId == request.auth.uid && isApprovedTeacher()) ||
        isAdmin();
      
      // 승인된 교사나 관리자는 생성 가능
      allow create: if isApprovedTeacher() || isAdmin();
      
      // 승인된 교사나 관리자는 수정 가능
      allow update: if (isApprovedTeacher() && resource.data.teacherId == request.auth.uid) || isAdmin();
      
      // 승인된 교사나 관리자는 삭제 가능
      allow delete: if (isApprovedTeacher() && resource.data.teacherId == request.auth.uid) || isAdmin();
    }
    
    // 팝스 측정 기록 컬렉션 규칙
    match /student_paps_records/{recordId} {
      // 자신이거나 담당 교사, 또는 관리자는 읽기 가능
      allow read: if request.auth != null && 
        (resource.data.studentId == request.auth.uid || 
        (resource.data.teacherId == request.auth.uid && isApprovedTeacher()) ||
        isAdmin());
      
      // 본인이거나 승인된 교사는 생성 가능
      allow create: if request.auth != null && 
        (request.resource.data.studentId == request.auth.uid || 
        (isApprovedTeacher() && request.resource.data.teacherId == request.auth.uid));
      
      // 본인이거나 담당 교사는 수정 가능
      allow update: if request.auth != null && 
        (resource.data.studentId == request.auth.uid || 
        (resource.data.teacherId == request.auth.uid && isApprovedTeacher()));
      
      // 본인이거나 담당 교사, 또는 관리자는 삭제 가능
      allow delete: if request.auth != null && 
        (resource.data.studentId == request.auth.uid || 
        (resource.data.teacherId == request.auth.uid && isApprovedTeacher()) ||
        isAdmin());
    }
    
    // 교사 설정 컬렉션 규칙
    match /teacher_settings/{teacherId} {
      // 자신이거나 관리자는 읽기 가능
      allow read: if isUser(teacherId) || isAdmin();
      
      // 승인된 교사 본인은 생성/수정 가능
      allow write: if isUser(teacherId) && isApprovedTeacher();
      
      // 관리자는 모든 작업 가능
      allow write: if isAdmin();
    }
  }
}